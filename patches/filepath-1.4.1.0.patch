From 47c3ef2d96cc7c5d67b3ca6bee3c32c446adb220 Mon Sep 17 00:00:00 2001
From: Rahul Muttineni <rahulmutt@gmail.com>
Date: Fri, 30 Dec 2016 02:01:07 +0530
Subject: [PATCH] Patched

---
 System/FilePath.hs          | 11 +++--------
 System/FilePath/Internal.hs | 12 ++++++------
 System/FilePath/Posix.hs    |  6 ++----
 System/FilePath/Windows.hs  |  6 ++----
 filepath.cabal              |  6 ++++--
 java/Utils.java             |  8 ++++++++
 6 files changed, 25 insertions(+), 24 deletions(-)
 create mode 100644 java/Utils.java

diff --git a/System/FilePath.hs b/System/FilePath.hs
index 331ae81..118ee7a 100644
--- a/System/FilePath.hs
+++ b/System/FilePath.hs
@@ -1,6 +1,6 @@
 {-# LANGUAGE CPP #-}
 #if __GLASGOW_HASKELL__ >= 704
-{-# LANGUAGE Safe #-}
+-- {-# LANGUAGE Safe #-}
 #endif
 {- |
 Module      :  System.FilePath
@@ -20,10 +20,5 @@ functions.
 -}


-#if defined(mingw32_HOST_OS) || defined(__MINGW32__)
-module System.FilePath(module System.FilePath.Windows) where
-import System.FilePath.Windows
-#else
-module System.FilePath(module System.FilePath.Posix) where
-import System.FilePath.Posix
-#endif
+module System.FilePath(module System.FilePath.Internal) where
+import System.FilePath.Internal
diff --git a/System/FilePath/Internal.hs b/System/FilePath/Internal.hs
index df4b39c..dfcb010 100644
--- a/System/FilePath/Internal.hs
+++ b/System/FilePath/Internal.hs
@@ -1,5 +1,6 @@
+{-# LANGUAGE CPP, ForeignFunctionInterface #-}
 #if __GLASGOW_HASKELL__ >= 704
-{-# LANGUAGE Safe #-}
+-- {-# LANGUAGE Safe #-}
 #endif
 {-# LANGUAGE PatternGuards #-}

@@ -8,7 +9,7 @@
 --     IS_WINDOWS  = False | True

 -- |
--- Module      :  System.FilePath.MODULE_NAME
+-- Module      :  System.FilePath.Internal
 -- Copyright   :  (c) Neil Mitchell 2005-2014
 -- License     :  BSD3
 --
@@ -16,7 +17,7 @@
 -- Stability   :  stable
 -- Portability :  portable
 --
--- A library for 'FilePath' manipulations, using MODULE_NAME style paths on
+-- A library for 'FilePath' manipulations, using Internal style paths on
 -- all platforms. Importing "System.FilePath" is usually better.
 --
 -- Given the example 'FilePath': @\/directory\/file.ext@
@@ -61,7 +62,7 @@
 --
 -- References:
 -- [1] <http://msdn.microsoft.com/en-us/library/windows/desktop/aa365247.aspx Naming Files, Paths and Namespaces> (Microsoft MSDN)
-module System.FilePath.MODULE_NAME
+module System.FilePath.Internal
     (
     -- * Separator predicates
     FilePath,
@@ -125,8 +126,7 @@ isPosix :: Bool
 isPosix = not isWindows

 -- | Is the operating system Windows like
-isWindows :: Bool
-isWindows = IS_WINDOWS
+foreign import java unsafe "@static eta.filepath.Utils.isWindows" isWindows :: Bool


 ---------------------------------------------------------------------
diff --git a/System/FilePath/Posix.hs b/System/FilePath/Posix.hs
index 3fbd0ff..8c4159c 100644
--- a/System/FilePath/Posix.hs
+++ b/System/FilePath/Posix.hs
@@ -1,4 +1,2 @@
-{-# LANGUAGE CPP #-}
-#define MODULE_NAME     Posix
-#define IS_WINDOWS      False
-#include "Internal.hs"
+module System.FilePath.Posix(module System.FilePath.Internal) where
+import System.FilePath.Internal
diff --git a/System/FilePath/Windows.hs b/System/FilePath/Windows.hs
index 3e3e9d6..89b6df9 100644
--- a/System/FilePath/Windows.hs
+++ b/System/FilePath/Windows.hs
@@ -1,4 +1,2 @@
-{-# LANGUAGE CPP #-}
-#define MODULE_NAME     Windows
-#define IS_WINDOWS      True
-#include "Internal.hs"
+module System.FilePath.Windows(module System.FilePath.Internal) where
+import System.FilePath.Internal
diff --git a/filepath.cabal b/filepath.cabal
index 5d4e771..acf7065 100644
--- a/filepath.cabal
+++ b/filepath.cabal
@@ -24,8 +24,6 @@ description:
     .
     All three modules provide the same API, and the same documentation (calling out differences in the different variants).

-extra-source-files:
-    System/FilePath/Internal.hs
 extra-doc-files:
     README.md
     changelog.md
@@ -36,9 +34,11 @@ source-repository head

 library
     default-language: Haskell98
+    java-sources: java/Utils.java
     other-extensions:
         CPP
         PatternGuards
+        ForeignFunctionInterface
     if impl(GHC >= 7.2)
         other-extensions: Safe

@@ -46,6 +46,8 @@ library
         System.FilePath
         System.FilePath.Posix
         System.FilePath.Windows
+    other-modules:
+        System.FilePath.Internal

     build-depends:
         base >= 4 && < 4.10
diff --git a/java/Utils.java b/java/Utils.java
new file mode 100644
index 0000000..400e939
--- /dev/null
+++ b/java/Utils.java
@@ -0,1 +1,8 @@
+package eta.filepath;
+
+public class Utils {
+    public static boolean isWindows() {
+        String osName = System.getProperty("os.name");
+        return osName.startsWith("Windows");
+    }
+}
--
2.7.4 (Apple Git-66)
