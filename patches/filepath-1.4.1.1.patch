From 4674640ce9a615fb56285f60b43e45c391596ab1 Mon Sep 17 00:00:00 2001
From: Sibi Prabakaran <sibi@psibi.in>
Date: Tue, 22 Nov 2016 20:07:40 +0530
Subject: [PATCH] Port filepath-1.4.1.1 for Eta

---
 System/FilePath.hs          |  16 +++++-----------
 System/FilePath/Internal.hs |  11 ++++-------
 System/FilePath/Posix.hs    |   6 ++----
 System/FilePath/Windows.hs  |   6 ++----
 filepath.cabal              |   2 ++
 java/Utils.class            | Bin 0 -> 452 bytes
 java/Utils.java             |   8 ++++++++
 7 files changed, 23 insertions(+), 26 deletions(-)
 create mode 100644 java/Utils.class
 create mode 100644 java/Utils.java

diff --git a/System/FilePath.hs b/System/FilePath.hs
index 331ae81..98e9796 100644
--- a/System/FilePath.hs
+++ b/System/FilePath.hs
@@ -1,7 +1,5 @@
 {-# LANGUAGE CPP #-}
-#if __GLASGOW_HASKELL__ >= 704
-{-# LANGUAGE Safe #-}
-#endif
+
 {- |
 Module      :  System.FilePath
 Copyright   :  (c) Neil Mitchell 2005-2014
@@ -18,12 +16,8 @@ Both "System.FilePath.Posix" and "System.FilePath.Windows" provide the
 same interface. See either for examples and a list of the available
 functions.
 -}
+module System.FilePath
+  ( module System.FilePath.Internal
+  ) where
 
-
-#if defined(mingw32_HOST_OS) || defined(__MINGW32__)
-module System.FilePath(module System.FilePath.Windows) where
-import System.FilePath.Windows
-#else
-module System.FilePath(module System.FilePath.Posix) where
-import System.FilePath.Posix
-#endif
+import System.FilePath.Internal
diff --git a/System/FilePath/Internal.hs b/System/FilePath/Internal.hs
index 4a376b3..4b75760 100644
--- a/System/FilePath/Internal.hs
+++ b/System/FilePath/Internal.hs
@@ -1,6 +1,4 @@
-#if __GLASGOW_HASKELL__ >= 704
-{-# LANGUAGE Safe #-}
-#endif
+{-# LANGUAGE CPP, ForeignFunctionInterface #-}
 {-# LANGUAGE PatternGuards #-}
 
 -- This template expects CPP definitions for:
@@ -8,7 +6,7 @@
 --     IS_WINDOWS  = False | True
 
 -- |
--- Module      :  System.FilePath.MODULE_NAME
+-- Module      :  System.FilePath.Internal
 -- Copyright   :  (c) Neil Mitchell 2005-2014
 -- License     :  BSD3
 --
@@ -61,7 +59,7 @@
 --
 -- References:
 -- [1] <http://msdn.microsoft.com/en-us/library/windows/desktop/aa365247.aspx Naming Files, Paths and Namespaces> (Microsoft MSDN)
-module System.FilePath.MODULE_NAME
+module System.FilePath.Internal
     (
     -- * Separator predicates
     FilePath,
@@ -125,8 +123,7 @@ isPosix :: Bool
 isPosix = not isWindows
 
 -- | Is the operating system Windows like
-isWindows :: Bool
-isWindows = IS_WINDOWS
+foreign import java unsafe "@static eta.filepath.Utils.isWindows" isWindows :: Bool
 
 
 ---------------------------------------------------------------------
diff --git a/System/FilePath/Posix.hs b/System/FilePath/Posix.hs
index 3fbd0ff..8c4159c 100644
--- a/System/FilePath/Posix.hs
+++ b/System/FilePath/Posix.hs
@@ -1,4 +1,2 @@
-{-# LANGUAGE CPP #-}
-#define MODULE_NAME     Posix
-#define IS_WINDOWS      False
-#include "Internal.hs"
+module System.FilePath.Posix(module System.FilePath.Internal) where
+import System.FilePath.Internal
diff --git a/System/FilePath/Windows.hs b/System/FilePath/Windows.hs
index 3e3e9d6..89b6df9 100644
--- a/System/FilePath/Windows.hs
+++ b/System/FilePath/Windows.hs
@@ -1,4 +1,2 @@
-{-# LANGUAGE CPP #-}
-#define MODULE_NAME     Windows
-#define IS_WINDOWS      True
-#include "Internal.hs"
+module System.FilePath.Windows(module System.FilePath.Internal) where
+import System.FilePath.Internal
diff --git a/filepath.cabal b/filepath.cabal
index 61723ad..56fde5c 100644
--- a/filepath.cabal
+++ b/filepath.cabal
@@ -36,9 +36,11 @@ source-repository head
 
 library
     default-language: Haskell2010
+    java-sources: java/Utils.java
     other-extensions:
         CPP
         PatternGuards
+        ForeignFunctionInterface
     if impl(GHC >= 7.2)
         other-extensions: Safe
 
diff --git a/java/Utils.class b/java/Utils.class
new file mode 100644
index 0000000000000000000000000000000000000000..d2b2f55f4900e049183ace301f6e676c6cf460cc
GIT binary patch
literal 452
zcmZut%T5A85UgGv3*#cVif<%d3~0h$ylK3ccp_?okA&L*BMgCEvO8$_Cof*qc<=-K
zC}Z!&Xo$|CdZxOn(mfxaZ|?vOQ5CRJ%3(>s#c~cS0%fe)ShKNC$R2B7n-fB+R=**n
zPlKK!6r0*t=hJaVg;%mOVkWPnTkZFPhbWP@38EED!>&5haa&v)J&GDbc`qI0kSEwd
z)bQn4+1PNfi7jTn18i(Ns9=ZSDkHr+4wy(Y@RA5ZDGu>Q((ij0ouTTQIjS{_j2aUb
z`pR5}!9;~-M%b%0e_bsTYQKL}|4Yp$B{Cj8GBPy0of#0y{{^+Ni!6U)d@NABAEV$`
zg)4E*?7x7X_`-uRW)m{S=%BzDOY3a4xE5UN6{+Tdn|?;-@y8;PW`?b?d69Vw#V<mf
BUfcix

literal 0
HcmV?d00001

diff --git a/java/Utils.java b/java/Utils.java
new file mode 100644
index 0000000..400e939
--- /dev/null
+++ b/java/Utils.java
@@ -0,0 +1,8 @@
+package eta.filepath;
+
+public class Utils {
+    public boolean isWindows() {
+        String osName = System.getProperty("os.name");
+        return osName.startsWith("Windows");
+    }
+}
-- 
2.7.4

